/*
* This header is generated by strong_classdump 0.1
* on Tuesday, November 26, 2013 at 11:54:00 PM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* strong_classdump is Copyright Â© 2013 by Elias Limneos, licensed under GPLv3.
*/

#import <Foundation/Foundation-Structs.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSCopying.h>

@interface NSExpression : NSObject <NSSecureCoding, NSCopying> {

	struct {
		unsigned _evaluationBlocked : 1;
		unsigned _reservedExpressionFlags : 31;
	}  _expressionFlags;
	unsigned _expressionType;

}
+(id)expressionForConstantValue:(id)arg1 ;
+(id)_newKeyPathExpressionForString:(id)arg1 ;
+(id)expressionForKeyPath:(id)arg1 ;
+(id)expressionForFunction:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3 ;
+(id)expressionForFunction:(id)arg1 arguments:(id)arg2 ;
+(id)expressionForVariable:(id)arg1 ;
+(id)expressionForSubquery:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3 ;
+(id)expressionWithFormat:(id)arg1 ;
+(id)expressionWithFormat:(id)arg1 arguments:(void*)arg2 ;
+(id)expressionWithFormat:(id)arg1 argumentArray:(id)arg2 ;
+(id)expressionForSymbolicString:(id)arg1 ;
+(id)expressionForAggregate:(id)arg1 ;
+(id)expressionForVariableNameAssignment:(id)arg1 expression:(id)arg2 ;
+(id)expressionForTernaryWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3 ;
+(id)expressionForUnionSet:(id)arg1 with:(id)arg2 ;
+(id)expressionForIntersectSet:(id)arg1 with:(id)arg2 ;
+(id)expressionForMinusSet:(id)arg1 with:(id)arg2 ;
+(id)expressionForBlock:(/*^block*/ id)arg1 arguments:(id)arg2 ;
+(id)expressionForAnyKey;
+(BOOL)supportsSecureCoding;
+(id)expressionForEvaluatedObject;
-(id)minimalFormInContext:(id)arg1 ;
-(id)rightExpression;
-(id)leftExpression;
-(unsigned)expressionType;
-(id)constantValue;
-(void)allowEvaluation;
-(id)operand;
-(id)collection;
-(void)acceptVisitor:(id)arg1 flags:(unsigned)arg2 ;
-(id)expressionValueWithObject:(id)arg1 context:(id)arg2 ;
-(id)initWithExpressionType:(unsigned)arg1 ;
-(id)predicateFormat;
-(id)_expressionWithSubstitutionVariables:(id)arg1 ;
-(id)function;
-(id)trueExpression;
-(id)falseExpression;
-(BOOL)_allowsEvaluation;
-(id)subexpression;
-(/*^block*/ id)expressionBlock;
-(BOOL)_shouldUseParensWithDescription;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)description;
-(id)arguments;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(id)keyPath;
-(SEL)selector;
-(id)variable;
-(id)predicate;
@end

